{"version":3,"sources":["components/Button.jsx","main/Calculator.jsx","components/Display.jsx","reportWebVitals.js","index.js"],"names":["Button","props","className","operation","double","triple","onClick","e","click","label","initialState","displayValue","clearDisplay","values","current","Calculator","state","this","setState","setOperation","equals","currentOperation","eval","n","includes","i","newValue","parseFloat","console","log","addDigit","op","value","clearMemory","Component","Display","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09d0169b.chunk.js","sourcesContent":["import React from 'react'\nimport './Button.css'\n\nexport default function Button(props) {\n  return (\n    <button\n      className={`\n      button\n      ${props.operation ? 'operation' : ''}\n      ${props.double ? 'double' : ''}\n      ${props.triple ? 'triple' : ''}\n    `}\n      onClick={e => props.click(props.label)}\n\n    >\n      {props.label}\n    </button>\n  )\n}\n","import React, { Component } from 'react'\nimport './Calculator.css'\nimport Button from '../components/Button'\nimport Display from '../components/Display'\n\nconst initialState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n}\nexport default class Calculator extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = { ...initialState }\n\n  }\n\n  clearMemory() {\n    this.setState({ ...initialState })\n  }\n\n  setOperation(operation) {\n    if (this.state.current === 0) {\n      this.setState({ operation, current: 1, clearDisplay: true })\n    } else {\n      const equals = operation === '='\n      const currentOperation = this.state.operation\n\n      const values = [...this.state.values]\n      try {\n        values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\n      } catch (e) {\n        values[0] = this.state.values[0]\n      }\n\n      values[1] = 0\n\n      this.setState({\n        displayValue: values[0],\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: !equals,\n        values\n      })\n    }\n  }\n\n  addDigit(n) {\n    if (n === '.' && this.state.displayValue.includes('.')) {\n      return\n    }\n\n    const clearDisplay = this.state.displayValue === '0'\n      || this.state.clearDisplay\n    const currentValue = clearDisplay ? '' : this.state.displayValue\n    const displayValue = currentValue + n\n    this.setState({ displayValue, clearDisplay: false })\n\n    if (n !== '.') {\n      const i = this.state.current\n      const newValue = parseFloat(displayValue)\n      const values = [...this.state.values]\n      values[i] = newValue\n      this.setState({ values })\n      console.log(values)\n    }\n  }\n\n  render() {\n    const addDigit = (n) => this.addDigit(n)\n    const setOperation = (op) => this.setOperation(op)\n    const clearMemory = () => this.clearMemory()\n    return (\n      <div className=\"calculator\">\n        <Display value={this.state.displayValue} />\n        <Button label=\"AC\" click={clearMemory} triple />\n        <Button label=\"/\" click={setOperation} operation />\n        <Button label=\"7\" click={addDigit} />\n        <Button label=\"8\" click={addDigit} />\n        <Button label=\"9\" click={addDigit} />\n        <Button label=\"*\" click={setOperation} operation />\n        <Button label=\"4\" click={addDigit} />\n        <Button label=\"5\" click={addDigit} />\n        <Button label=\"6\" click={addDigit} />\n        <Button label=\"-\" click={setOperation} operation />\n        <Button label=\"1\" click={addDigit} />\n        <Button label=\"2\" click={addDigit} />\n        <Button label=\"3\" click={addDigit} />\n        <Button label=\"+\" click={setOperation} operation />\n        <Button label=\"0\" click={addDigit} double />\n        <Button label=\".\" click={addDigit} />\n        <Button label=\"=\" click={setOperation} operation />\n\n      </div>\n    )\n  }\n  \n}\n","import React from 'react'\nimport './Display.css'\nexport default function Display(props) {\n  return (\n    <div className=\"display\">{props.value}</div>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Calculator from './main/Calculator';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <h1>\n      Calculadora\n    </h1>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}